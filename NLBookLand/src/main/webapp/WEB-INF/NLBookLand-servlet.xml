<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd 
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd">

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/reources/**" location="/resouirces/" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/> 
	
	<!--  tell the framework which packages to be scanned when using annotation-based strategy -->
	<context:component-scan base-package="com.nlbookland"/>
	
	<!-- freemarker config -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
      <property name="templateLoaderPath" value="/WEB-INF/ftl/"/>
    </bean>
	
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>	 -->
     <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">		
		<property name="prefix">
			<value></value>
		</property>
		<property name="suffix">
			<value>.ftl</value>
		</property>
		<property name="cache">
			<value>true</value>
		</property>		  	    
	</bean>
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/TestDB" />
        <property name="username" value="pankaj" />
        <property name="password" value="pankaj123" />
    </bean> -->
    
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />		 
		<property name="annotatedClasses">
			<list>
				<value>com.nlbookland.model.Person</value>
				<value>com.nlbookland.model.Book</value>
			</list>
		</property>
		 
		<property name="hibernateProperties">
			<props>
				<!-- <prop key="hibernate.connection.driver_class">org.h2.Driver</prop>-->
				<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
				<!-- <prop key="hibernate.connection.url">jdbc:h2:booklanddb</prop>-->
				 <prop key="hibernate.hbm2ddl.auto">create</prop> 
				<prop key="hibernate.show_sql">true</prop>
				<!-- org.hibernate.HibernateException: No CurrentSessionContext configured! -->
				<prop key="hibernate.current_session_context_class">thread</prop>
			</props>
		</property>
	</bean>
 
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:~/booklanddb" />		
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	 <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
	 <jdbc:initialize-database>
        <jdbc:script location="classpath:database/populate-data.sql"/>
    </jdbc:initialize-database>
    
</beans>